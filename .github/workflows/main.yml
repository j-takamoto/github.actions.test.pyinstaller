# Actionの実行は先頭にvのついたTagのPush時
# コマンドだと
# git tag vn.n
# git push origin --tags
#
# VSCodeでの実行は
# コマンドパレットから
# Git: Create Tag(Git: タグを作成)
# Git: Push Tag(Git: タグをプッシュ)

name: push
on:
  push:
    tags:
      - 'v*'

jobs:
  # Windows用のビルド
  windows-build:
    # ランナーにWindowsを指定
    runs-on: windows-latest
    steps:
      # ソースをチェックアウト
      - name: Checkout commit
        uses: actions/checkout@master

      # Python環境のSetUp
      - name: Set up Python 3.9
        uses: actions/setup-python@master
        # Pythonバージョンの指定
        with: { python-version: 3.9 }

      # PipのUpgrade及び必要ライブラリのインストール
      - name: Upgrade pip
        run: python -m pip install --upgrade pip PyInstaller

      # pyinstallerでビルドを実行->実行ファイルの作成
      - name: build
        run: pyinstaller main.spec

      # Artifactにexeをアップロード
      # ArtifactはActionsの実行結果からダウンロードできる
      - name: upload
        uses: actions/upload-artifact@v1
        with:
          name: sample-windows
          path: dist/main.exe

  # GitHubReleaseを作成
  release:
    # 前提としてビルドを指定
    needs: [windows-build]
    # ランナーにUbuntuを指定
    runs-on: ubuntu-latest

    steps:
      # Artifactからファイルを取得
      - name: Download Windows
        uses: actions/download-artifact@v1
        with:
          name: dist

      # デバッグ用
      # タグの出力
      - name: echo ref
        run: echo ${{ github.ref }}

      # リリースの作成
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      # リリースファイルをZip圧縮
      - name: Create Zip
        run: |
          zip --junk-paths main ./dist/main.exe\

      # リリースにファイルを追加
      - name: Append Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./main.zip
          asset_name: main.zip
          asset_content_type: application/zip
